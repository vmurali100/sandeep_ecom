[{"F:\\sandeep_ecom\\project1\\src\\index.tsx":"1","F:\\sandeep_ecom\\project1\\src\\reportWebVitals.ts":"2","F:\\sandeep_ecom\\project1\\src\\App.tsx":"3","F:\\sandeep_ecom\\project1\\src\\DashBoard.tsx":"4","F:\\sandeep_ecom\\project1\\src\\Navbar.tsx":"5","F:\\sandeep_ecom\\project1\\src\\Products.tsx":"6","F:\\sandeep_ecom\\project1\\src\\ProductModel.tsx":"7","F:\\sandeep_ecom\\project1\\src\\EditComponent.tsx":"8","F:\\sandeep_ecom\\project1\\src\\store\\store.ts":"9","F:\\sandeep_ecom\\project1\\src\\reducers\\RootReducer.ts":"10","F:\\sandeep_ecom\\project1\\src\\reducers\\ProductReducer.ts":"11","F:\\sandeep_ecom\\project1\\src\\actions\\ProductActionTypes.ts":"12","F:\\sandeep_ecom\\project1\\src\\actions\\ProductActions.ts":"13","F:\\sandeep_ecom\\project1\\src\\Search.tsx":"14","F:\\sandeep_ecom\\project1\\src\\Login.tsx":"15"},{"size":626,"mtime":1611279072585,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1607015203623,"results":"18","hashOfConfig":"17"},{"size":583,"mtime":1613703090619,"results":"19","hashOfConfig":"17"},{"size":9585,"mtime":1613703036075,"results":"20","hashOfConfig":"17"},{"size":1836,"mtime":1613703504579,"results":"21","hashOfConfig":"17"},{"size":2885,"mtime":1613097184018,"results":"22","hashOfConfig":"17"},{"size":8455,"mtime":1611714622150,"results":"23","hashOfConfig":"17"},{"size":4945,"mtime":1611192891080,"results":"24","hashOfConfig":"17"},{"size":398,"mtime":1611279716730,"results":"25","hashOfConfig":"17"},{"size":165,"mtime":1611279474489,"results":"26","hashOfConfig":"17"},{"size":721,"mtime":1611882791648,"results":"27","hashOfConfig":"17"},{"size":1070,"mtime":1611882645751,"results":"28","hashOfConfig":"17"},{"size":2011,"mtime":1611882734901,"results":"29","hashOfConfig":"17"},{"size":558,"mtime":1611881768371,"results":"30","hashOfConfig":"17"},{"size":2278,"mtime":1613703351403,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"j9nb8q",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\sandeep_ecom\\project1\\src\\index.tsx",[],["66","67"],"F:\\sandeep_ecom\\project1\\src\\reportWebVitals.ts",[],"F:\\sandeep_ecom\\project1\\src\\App.tsx",["68","69"],"F:\\sandeep_ecom\\project1\\src\\DashBoard.tsx",["70","71","72","73","74","75","76","77","78","79"],"import React, { ChangeEvent, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addProductAction, deleteProduct, getAllProducts, searchProduct, updateProduct } from \"./actions/ProductActions\";\r\nimport { EditComponent } from \"./EditComponent\";\r\nimport { Navbar } from \"./Navbar\";\r\nimport { ProductModel } from \"./ProductModel\";\r\nimport { Products } from \"./Products\";\r\nimport { Search } from \"./Search\";\r\nimport { RootStore } from './store/store'\r\n\r\nexport interface Product {\r\n  productName: string;\r\n  productQty: number;\r\n  category: string;\r\n  discount: string;\r\n  sizes: string[];\r\n  email: string;\r\n  prodDate?: Date;\r\n  id?: number\r\n}\r\nexport interface Size {\r\n  type: string;\r\n  checked: boolean\r\n}\r\nexport const DashBoard: React.FC<any> = () => {\r\n  const allProducts: any = useSelector((state: RootStore) => state.products);\r\n  console.log(allProducts)\r\n\r\n\r\n  const [showModal, setshowModal] = useState(false);\r\n  const [selectedProduct, setselectedProduct] = useState({\r\n    productName: \"\",\r\n    productQty: 0,\r\n    email: \"\",\r\n    category: '',\r\n    discount: '',\r\n    sizes: [],\r\n  })\r\n  const [tableHeaders, settableHeaders] = useState([\r\n\r\n    { headerName: \"Product Name\", headerString: \"productName\" },\r\n    { headerName: \"Procut Qty\", headerString: \"productQty\" },\r\n    { headerName: \"Email\", headerString: \"email\" },\r\n    { headerName: \"Procuct Catagory\", headerString: \"category\" },\r\n    { headerName: \"Discount\", headerString: \"discount\" },\r\n    { headerName: \"Sizes\", headerString: \"sizes\" },\r\n    { headerName: \"ID\", headerString: \"id\" },\r\n  ])\r\n  const [selectedSizes, setselectedSizes] = useState([\r\n    {\r\n      type: 'Normal',\r\n      checked: false\r\n    },\r\n    {\r\n      type: 'XL',\r\n      checked: false\r\n\r\n    },\r\n    {\r\n      type: 'XXL',\r\n      checked: false\r\n\r\n    }\r\n  ])\r\n  // const [allProducts, setallProducts] = useState([]);\r\n  const [showEdit, setshowEdit] = useState(false);\r\n  const [index, setindex] = useState(0)\r\n  const [sizes, setsizes] = useState([\r\n    {\r\n      type: 'Normal',\r\n      checked: false\r\n    },\r\n    {\r\n      type: 'XL',\r\n      checked: false\r\n\r\n    },\r\n    {\r\n      type: 'XXL',\r\n      checked: false\r\n\r\n    }\r\n  ])\r\n  const [discounts, setdiscounts] = useState([\r\n    {\r\n      type: \"yes\",\r\n      checked: false\r\n    },\r\n    {\r\n      type: \"no\",\r\n      checked: false\r\n    }\r\n  ])\r\n  const [product, setproduct] = useState({\r\n    productName: \"\",\r\n    productQty: 0,\r\n    email: \"\",\r\n    category: '',\r\n    discount: '',\r\n    sizes: [],\r\n  })\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(getAllProducts())\r\n  }, [])\r\n\r\n  // const calculatePages = () => {\r\n  //   console.log(allProducts)\r\n  //   let allProductsDetails: any = allProducts\r\n  //   if (allProductsDetails) {\r\n  //     console.log(allProductsDetails.length)\r\n  //   }\r\n  // }\r\n\r\n  const handleModal = () => {\r\n    setshowModal(true);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setshowModal(false);\r\n  };\r\n  const handleAddproduct = () => {\r\n    handleModal();\r\n    //Actions\r\n  };\r\n\r\n  const addProduct = (product: Product) => {\r\n    // let products: any = [...allProducts]\r\n    // products.push(product);\r\n    // setallProducts(products)\r\n    handleModalClose();\r\n    dispatch(addProductAction(product))\r\n  };\r\n\r\n  const handleEdit = (i: number) => {\r\n    setshowEdit(true)\r\n    setindex(i)\r\n    let selectedProduct: any = allProducts[i]\r\n    let allSizes = [...sizes]\r\n    sizes.forEach((size) => {\r\n      size.checked = false\r\n      selectedProduct['sizes'].forEach((s: any) => {\r\n        if (size.type == s) {\r\n          size.checked = true\r\n        }\r\n      })\r\n    })\r\n    setsizes(allSizes)\r\n    let allDiscounts = [...discounts]\r\n    allDiscounts.forEach((discount) => {\r\n      if (discount.type === selectedProduct.discount) {\r\n        discount.checked = true\r\n      }\r\n    })\r\n    setdiscounts(allDiscounts)\r\n    setselectedSizes(allSizes)\r\n    setselectedProduct(selectedProduct)\r\n  }\r\n  const hanldeDelete = (i: number) => {\r\n    console.log(allProducts[i])\r\n    let newProducts: any = [...allProducts];\r\n\r\n    dispatch(deleteProduct(newProducts[i].id))\r\n    // console.log(\"hanldeDelete called \" + i)\r\n    // let newProducts = [...allProducts];\r\n    // newProducts.splice(i, 1);\r\n    // setallProducts(newProducts)\r\n  }\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let newProduct: any = { ...selectedProduct }\r\n    newProduct[e.target.name] = e.target.value\r\n    setselectedProduct(newProduct)\r\n  }\r\n\r\n  const handleCheckChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let newProduct: any = { ...product }\r\n    newProduct[e.target.name] = e.target.value\r\n    setproduct(newProduct);\r\n    let allDiscounts = [...discounts]\r\n    allDiscounts.forEach(discount => {\r\n      if (e.target.value === discount.type) {\r\n        discount.checked = true\r\n      } else {\r\n        discount.checked = false\r\n      }\r\n    })\r\n    setdiscounts(allDiscounts)\r\n  }\r\n\r\n  const handleSelectChange = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    let newProduct: any = { ...selectedProduct }\r\n    newProduct[e.target.name] = e.target.value\r\n    setselectedProduct(newProduct)\r\n\r\n  }\r\n\r\n  const handleSizeChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    let val = e.target.value\r\n    let newSizes = [...sizes];\r\n    let selectedProd = { ...selectedProduct }\r\n    newSizes.forEach((size) => {\r\n      if (size.type == val) {\r\n        if (size.checked) {\r\n          size.checked = false\r\n        } else {\r\n          size.checked = true\r\n        }\r\n      }\r\n\r\n    })\r\n    setsizes(newSizes)\r\n  }\r\n  const handleUpdate = () => {\r\n    let newProducts: any = [...allProducts]\r\n    newProducts[index] = selectedProduct;\r\n    let selectedSizes: string[] = []\r\n    sizes.forEach((size: Size) => {\r\n      if (size.checked) {\r\n        selectedSizes.push(size.type)\r\n      }\r\n    })\r\n    discounts.forEach(discount => {\r\n      if (discount.checked) {\r\n        newProducts[index].discount = discount.type\r\n      }\r\n    })\r\n    newProducts[index].sizes = selectedSizes;\r\n    dispatch(updateProduct(newProducts[index]))\r\n    setshowEdit(false)\r\n  }\r\n\r\n  const handleSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n    console.log(e.target.value)\r\n    let val = e.target.value\r\n    let defaultProducts = [...allProducts];\r\n    let filteredProducts: any = []\r\n    if (val.length == 0) {\r\n      dispatch(getAllProducts())\r\n    } else {\r\n      // filtering Logic Comes Here\r\n      // for (let a in selectedProduct) {\r\n      //   if (a !== \"sizes\") {\r\n\r\n      //     // filteredProducts = defaultProducts.filter((prod: any) => prod.productName.toLowerCase().indexOf(val.toLowerCase()) > -1)\r\n      //   }\r\n      // }\r\n      filteredProducts = defaultProducts.filter((prod: any) => {\r\n        let check = false;\r\n        for (let a in prod) {\r\n          if (a !== \"sizes\" && a !== \"id\") {\r\n            if (prod[a].indexOf(val) > -1) {\r\n              check = true\r\n            }\r\n          } else if (a === \"sizes\") {\r\n            // eslint-disable-next-line no-loop-func\r\n            prod[a].forEach((pVal: string) => {\r\n              if (pVal.indexOf(val) > -1) {\r\n                check = true\r\n              }\r\n            })\r\n          }\r\n        }\r\n        if (check) {\r\n          return prod\r\n        }\r\n      })\r\n      dispatch(searchProduct(filteredProducts))\r\n    }\r\n  }\r\n  const handleSort = (sortName: string) => {\r\n    console.log(sortName)\r\n    let mainProducts: any = [...allProducts]\r\n    let sorted = mainProducts.sort(function (a: any, b: any) {\r\n      if (sortName !== \"id\") {\r\n        var nameA = a[sortName].toLowerCase(), nameB = b[sortName].toLowerCase()\r\n      } else {\r\n        var nameA = a[sortName], nameB = b[sortName]\r\n\r\n      }\r\n      if (nameA < nameB) //sort string ascending\r\n        return -1\r\n      if (nameA > nameB)\r\n        return 1\r\n      return 0 //default return value (no sorting)\r\n    })\r\n    console.log(sorted)\r\n    dispatch(searchProduct(sorted))\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Navbar title={\"E Commerce Application\"} />\r\n      <div className=\"container\">\r\n        <div className=\"row \">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col\"></div>\r\n          <div className=\"col text-end\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              style={{ width: \"200px\" }}\r\n              onClick={handleAddproduct}\r\n            >\r\n              Add Product\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\"></div>\r\n          <div className=\"col\"></div>\r\n          <div className=\"col\">\r\n            <div className=\"col text-end\">\r\n              <Search handleSearch={handleSearch} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Products\r\n          tableHeaders={tableHeaders}\r\n          handleSort={handleSort}\r\n          allProducts={allProducts}\r\n          handleEdit={handleEdit}\r\n          hanldeDelete={hanldeDelete} />\r\n\r\n        {showEdit && <EditComponent\r\n          product={selectedProduct}\r\n          handleChange={handleChange}\r\n          handleCheckChange={handleCheckChange}\r\n          handleSelectChange={handleSelectChange}\r\n          sizes={sizes}\r\n          discounts={discounts}\r\n          handleUpdate={handleUpdate}\r\n          handleSizeChange={handleSizeChange}\r\n        />}\r\n        {showModal && (\r\n          <ProductModel closeModel={handleModalClose} addProduct={addProduct} />\r\n        )}\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n","F:\\sandeep_ecom\\project1\\src\\Navbar.tsx",["80"],"F:\\sandeep_ecom\\project1\\src\\Products.tsx",["81","82","83","84","85","86","87"],"import React, { useEffect, useState } from \"react\";\r\nimport { Product } from \"./DashBoard\";\r\n\r\ntype ProductsWithProps = {\r\n  allProducts: Product[],\r\n  handleEdit(i: number): void,\r\n  hanldeDelete(i: number): void\r\n  handleSort(sortName: string): void,\r\n  tableHeaders: any[],\r\n\r\n}\r\n\r\nexport const Products: React.FC<ProductsWithProps> = ({ tableHeaders, handleSort, allProducts, handleEdit, hanldeDelete }) => {\r\n  const [allProductsDetails, setallProductsDetails] = useState([]);\r\n  const [noofRecords, setnoofRecords] = useState(5)\r\n  const [pages, setpages] = useState(0)\r\n\r\n  useEffect(() => {\r\n    const getProdInfo: any = allProducts\r\n    console.log(getProdInfo)\r\n    setallProductsDetails(getProdInfo)\r\n  }, [allProducts])\r\n\r\n  const goToPage = (num: any) => {\r\n    console.log(\" goToPage called\", num)\r\n    let startIndex = (num * 5) - noofRecords;\r\n    let endIndex = noofRecords;\r\n    let pagedData: any = [...allProducts].splice(startIndex, endIndex)\r\n    setallProductsDetails(pagedData)\r\n\r\n  }\r\n  const handlePageNos = () => {\r\n    return Math.round([...allProducts].length / noofRecords)\r\n  }\r\n  return (\r\n    <div>\r\n      <table className=\"table table-striped\">\r\n        <thead>\r\n          <tr>\r\n            {tableHeaders.map(header =>\r\n              <th onClick={() => { handleSort(header.headerString) }}>{header.headerName} <i className=\"bi bi-arrow-up\"></i>\r\n              </th>\r\n            )}\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {allProductsDetails.map((product, i) => {\r\n            if (i < noofRecords) {\r\n              return <tr key={i}>\r\n                {Object.values(product).map((val: any, j) => <td key={j}>{val}</td>)}\r\n                <td><button className=\"btn btn-warning\" onClick={() => { handleEdit(i) }}>Edit</button></td>\r\n                <td><button className=\"btn btn-danger\" onClick={() => { hanldeDelete(i) }}>Delete</button></td>\r\n              </tr>\r\n            }\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <nav aria-label=\"Page navigation example\">\r\n        <PageNation pages={handlePageNos()} goToPage={goToPage} />\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype PageNationProps = {\r\n  pages: number,\r\n  goToPage(num: any): void\r\n}\r\n\r\nconst PageNation: React.FC<PageNationProps> = ({ pages, goToPage }) => {\r\n  let i = 0\r\n  let nums = []\r\n  while (i < pages) {\r\n    nums.push(i)\r\n    i++\r\n  }\r\n  return <ul className=\"pagination\">\r\n    <li className=\"page-item prev\" ><a className=\"page-link\" href=\"#\" onClick={() => { goToPage(-1) }} >Previous</a></li>\r\n    {nums.map((num) => {\r\n      return <li className=\"page-item\"><a className=\"page-link\" href=\"#\" onClick={() => { goToPage(num + 1) }}>{num + 1}</a></li>\r\n    })}\r\n    <li className=\"page-item\"><a className=\"page-link\" href=\"#\" onClick={() => { goToPage(+1) }}>Next</a></li>\r\n  </ul>\r\n}","F:\\sandeep_ecom\\project1\\src\\ProductModel.tsx",[],"F:\\sandeep_ecom\\project1\\src\\EditComponent.tsx",[],"F:\\sandeep_ecom\\project1\\src\\store\\store.ts",[],"F:\\sandeep_ecom\\project1\\src\\reducers\\RootReducer.ts",[],"F:\\sandeep_ecom\\project1\\src\\reducers\\ProductReducer.ts",[],"F:\\sandeep_ecom\\project1\\src\\actions\\ProductActionTypes.ts",[],"F:\\sandeep_ecom\\project1\\src\\actions\\ProductActions.ts",["88","89","90"],"import { Product } from './../DashBoard';\r\nimport { ProductActionTypes, GET_ALL_PRODUCTS, ADD_PRODUCT, DELETE_PRODUCT, UPDATE_PRODUCT, SEARCH_PRODUCT } from './ProductActionTypes';\r\nimport { Dispatch } from \"react\"\r\nimport axios from 'axios';\r\n\r\nexport const getAllProducts = () => async (dispatch:Dispatch<ProductActionTypes>)=>{\r\n    try {\r\n        const res = await axios.get(\"http://localhost:3000/products\")\r\n        dispatch({\r\n            type:GET_ALL_PRODUCTS,\r\n            payLoad:res.data\r\n        })\r\n        \r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const addProductAction = (product:Product) => async (disatch:Dispatch<ProductActionTypes>)=>{\r\n    console.log(product)\r\n    try {\r\n        const res = await axios.post(\"http://localhost:3000/products\",product);\r\n        const response = await axios.get(\"http://localhost:3000/products\");\r\n        disatch({\r\n            type:ADD_PRODUCT,\r\n            payLoad:response.data\r\n        })\r\n    } catch (error) {\r\n        \r\n    }\r\n    \r\n}\r\n\r\nexport const deleteProduct = (id:number) => async (dispatch:Dispatch<ProductActionTypes>) => {\r\n    try {\r\n        const res = await axios.delete(\"http://localhost:3000/products/\"+id);\r\n        const response = await axios.get(\"http://localhost:3000/products\");\r\n        dispatch({\r\n            type:DELETE_PRODUCT,\r\n            payLoad:response.data\r\n        })\r\n\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const updateProduct = (product:Product)=> async (dispatch:Dispatch<ProductActionTypes>) => {\r\n    try {\r\n        const res = await axios.put(\"http://localhost:3000/products/\"+product.id,product);\r\n        const response = await axios.get(\"http://localhost:3000/products\");\r\n        dispatch({\r\n            type:UPDATE_PRODUCT,\r\n            payLoad:response.data\r\n        })\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n\r\nexport const searchProduct=(data:any)=> (dispatch:Dispatch<ProductActionTypes>)=>{\r\n    dispatch({\r\n        type:SEARCH_PRODUCT,\r\n        payLoad:data\r\n    })\r\n}","F:\\sandeep_ecom\\project1\\src\\Search.tsx",[],"F:\\sandeep_ecom\\project1\\src\\Login.tsx",["91"],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":3,"column":10,"nodeType":"98","messageId":"99","endLine":3,"endColumn":16},{"ruleId":"96","severity":1,"message":"100","line":9,"column":3,"nodeType":"98","messageId":"99","endLine":9,"endColumn":7},{"ruleId":"96","severity":1,"message":"101","line":39,"column":24,"nodeType":"98","messageId":"99","endLine":39,"endColumn":39},{"ruleId":"96","severity":1,"message":"102","line":49,"column":10,"nodeType":"98","messageId":"99","endLine":49,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":105,"column":6,"nodeType":"105","endLine":105,"endColumn":8,"suggestions":"106"},{"ruleId":"107","severity":1,"message":"108","line":143,"column":23,"nodeType":"109","messageId":"110","endLine":143,"endColumn":25},{"ruleId":"96","severity":1,"message":"111","line":201,"column":9,"nodeType":"98","messageId":"99","endLine":201,"endColumn":21},{"ruleId":"107","severity":1,"message":"108","line":203,"column":21,"nodeType":"109","messageId":"110","endLine":203,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":238,"column":20,"nodeType":"109","messageId":"110","endLine":238,"endColumn":22},{"ruleId":"112","severity":1,"message":"113","line":248,"column":61,"nodeType":"114","messageId":"115","endLine":248,"endColumn":63},{"ruleId":"116","severity":1,"message":"117","line":278,"column":13,"nodeType":"98","messageId":"118","endLine":278,"endColumn":18},{"ruleId":"116","severity":1,"message":"119","line":278,"column":34,"nodeType":"98","messageId":"118","endLine":278,"endColumn":39},{"ruleId":"120","severity":1,"message":"121","line":52,"column":17,"nodeType":"122","endLine":52,"endColumn":73},{"ruleId":"96","severity":1,"message":"123","line":15,"column":23,"nodeType":"98","messageId":"99","endLine":15,"endColumn":37},{"ruleId":"96","severity":1,"message":"124","line":16,"column":10,"nodeType":"98","messageId":"99","endLine":16,"endColumn":15},{"ruleId":"96","severity":1,"message":"125","line":16,"column":17,"nodeType":"98","messageId":"99","endLine":16,"endColumn":25},{"ruleId":"112","severity":1,"message":"126","line":49,"column":48,"nodeType":"114","messageId":"115","endLine":49,"endColumn":50},{"ruleId":"120","severity":1,"message":"121","line":80,"column":37,"nodeType":"122","endLine":80,"endColumn":105},{"ruleId":"120","severity":1,"message":"121","line":82,"column":40,"nodeType":"122","endLine":82,"endColumn":112},{"ruleId":"120","severity":1,"message":"121","line":84,"column":31,"nodeType":"122","endLine":84,"endColumn":98},{"ruleId":"96","severity":1,"message":"127","line":22,"column":15,"nodeType":"98","messageId":"99","endLine":22,"endColumn":18},{"ruleId":"96","severity":1,"message":"127","line":36,"column":15,"nodeType":"98","messageId":"99","endLine":36,"endColumn":18},{"ruleId":"96","severity":1,"message":"127","line":50,"column":15,"nodeType":"98","messageId":"99","endLine":50,"endColumn":18},{"ruleId":"107","severity":1,"message":"108","line":14,"column":33,"nodeType":"109","messageId":"110","endLine":14,"endColumn":35},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"@typescript-eslint/no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'settableHeaders' is assigned a value but never used.","'selectedSizes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["130"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'selectedProd' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-redeclare","'nameA' is already defined.","redeclared","'nameB' is already defined.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setnoofRecords' is assigned a value but never used.","'pages' is assigned a value but never used.","'setpages' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'res' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [dispatch]",{"range":"133","text":"134"},[2652,2654],"[dispatch]"]